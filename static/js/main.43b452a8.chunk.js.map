{"version":3,"sources":["Square.js","Board.js","Game.js","serviceWorker.js","index.js"],"names":["Square","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","react_default","a","createElement","className","style","squareStyle","onClick","onClicked","React","Component","Board","values","nextX","startX","handleClicked","bind","assertThisInitialized","calculateGameState","findEmpties","minimax","searchMove","restartGame","randomlyChoose","displayGameState","index","_this2","squareStyles","border-left","border-top","border-right","border-bottom","keys","i","length","key","src_Square","slice","setState","player","Math","floor","random","lines","_lines$i","slicedToArray","b","c","empties","push","result","emptyIndex","gameState","float","background","renderSquare","type","Game","src_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_Game_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4QAoBeA,0BAhBX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,MAAO,MAHIR,wEAQf,OACIS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,MAAOV,KAAKJ,MAAMe,YAAaC,QAASZ,KAAKJ,MAAMiB,WACzEb,KAAKJ,MAAMS,cAXPS,IAAMC,YCgPZC,cA9OX,SAAAA,EAAYpB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,IACfnB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,KAAMJ,KACDQ,MAAQ,CACTa,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzCC,OAAO,EACPC,QAAQ,GAEZtB,EAAKuB,cAAgBvB,EAAKuB,cAAcC,KAAnBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACrBA,EAAK0B,mBAAqB1B,EAAK0B,mBAAmBF,KAAxBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAC1BA,EAAK2B,YAAc3B,EAAK2B,YAAYH,KAAjBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACnBA,EAAK4B,QAAU5B,EAAK4B,QAAQJ,KAAbvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACfA,EAAK6B,WAAa7B,EAAK6B,WAAWL,KAAhBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAClBA,EAAK8B,YAAc9B,EAAK8B,YAAYN,KAAjBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACnBA,EAAK+B,eAAiB/B,EAAK+B,eAAeP,KAApBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KACtBA,EAAKgC,iBAAmBhC,EAAKgC,iBAAiBR,KAAtBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAD,KAdTA,4EAiBNiC,EAAOzB,GAchB,IAduB,IAAA0B,EAAA/B,KACjBgC,EAAe,CACjB,CAACC,cAAe,MAAOC,aAAc,OACrC,CAACA,aAAc,OACf,CAACC,eAAgB,MAAOD,aAAc,OACtC,CAACD,cAAe,OAChB,GACA,CAACE,eAAgB,OACjB,CAACF,cAAe,MAAOG,gBAAiB,OACxC,CAACA,gBAAiB,OAClB,CAACD,eAAgB,MAAOC,gBAAiB,QAEzCzB,EAAc,GACd0B,EAAOvC,OAAOuC,KAAKL,EAAaF,IAC3BQ,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CAClC,IAAIE,EAAMH,EAAKC,GACf3B,EAAY6B,GAAOR,EAAaF,GAAOU,GAS3C,MAPc,MAAVnC,GACAA,EAAQ,SACRM,EAAW,MAAY,WACN,MAAVN,IACPA,EAAQ,SACRM,EAAW,MAAY,WAEpBL,EAAAC,EAAAC,cAACiC,EAAD,CAAQpC,MAAOA,EAAOM,YAAaA,EAAaE,UAAW,kBAAMkB,EAAKX,cAAcU,4CAGjFA,GACV,GAAmD,YAA/C9B,KAAKuB,mBAAmBvB,KAAKI,MAAMa,SAAsD,KAA7BjB,KAAKI,MAAMa,OAAOa,GAAe,CAC7F,IAAIb,EAASjB,KAAKI,MAAMa,OAAOyB,QAC3B1C,KAAKI,MAAMc,MACXD,EAAOa,GAAS,IAEhBb,EAAOa,GAAS,IAEpB,IAAIZ,GAASlB,KAAKI,MAAMc,MAGxB,GAFAlB,KAAK2C,SAAS,CAAC1B,OAAQA,EAAQC,MAAOA,IAEpB,YADFlB,KAAKuB,mBAAmBN,GACX,CACzB,IACI2B,EAAS1B,EAAQ,IAAM,KADvBD,EAASA,EAAOyB,SAEhBZ,EAAQ9B,KAAK0B,WAAWT,EAAQ2B,IACpBA,EAChB5C,KAAK2C,SAAS,CACN1B,OAAQA,EAAQC,OAAQA,EAAOC,OAAQnB,KAAKI,MAAMe,oDAQlE,IAAIF,EAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE9C,OADAA,EAAO4B,KAAKC,MAAMD,KAAKE,SAAW/C,KAAKI,MAAMa,OAAOsB,SAAW,IACxDtB,wCAKW,YADFjB,KAAKuB,mBAAmBvB,KAAKI,MAAMa,QAE/CjB,KAAK2C,SAAS,CACN1B,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzCC,OAAO,EACPC,OAAQnB,KAAKI,MAAMe,SAI3BnB,KAAK2C,SAAS,CACN1B,OAASjB,KAAKI,MAAMe,OAAgDnB,KAAK4B,iBAA5C,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC9DV,OAAO,EACPC,QAASnB,KAAKI,MAAMe,oDAMjBF,GAWf,IAVA,IAAM+B,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFV,EAAI,EAAGA,EAAIU,EAAMT,OAAQD,IAAK,KAAAW,EAAAnD,OAAAoD,EAAA,EAAApD,CACjBkD,EAAMV,GADW,GAC5B/B,EAD4B0C,EAAA,GACzBE,EADyBF,EAAA,GACtBG,EADsBH,EAAA,GAEnC,GAAIhC,EAAOV,IAAMU,EAAOV,KAAOU,EAAOkC,IAAMlC,EAAOV,KAAOU,EAAOmC,GAC7D,MAAkB,MAAdnC,EAAOV,GACA,UAEA,UAInB,IAAK,IAAI+B,EAAI,EAAGA,EAAIrB,EAAOsB,OAAQD,IAC/B,GAAkB,KAAdrB,EAAOqB,GACP,MAAO,UAGf,MAAO,0CAGCrB,GAER,IADA,IAAIoC,EAAU,GACLf,EAAI,EAAGA,EAAIrB,EAAOsB,OAAQD,IACb,KAAdrB,EAAOqB,IACPe,EAAQC,KAAKhB,GAGrB,OAAOe,qCAGApC,EAAQ2B,GAGf,IAFA,IAAIS,EAAUrD,KAAKwB,YAAYP,GAC3BsC,EAAS,GACJjB,EAAI,EAAGA,EAAIe,EAAQd,OAAQD,IAAK,CACrC,IAAIkB,EAAaH,EAAQf,GACzBrB,EAAOuC,GAAcZ,EACrBW,EAAOD,KAAKtD,KAAKyB,QAAQR,EAAmB,MAAX2B,EAAiB,IAAM,MACxD3B,EAAOuC,GAAc,GAEzB,IAASlB,EAAI,EAAGA,EAAIiB,EAAOhB,OAAQD,IAAK,CACpC,GAAe,MAAXM,GAAgC,YAAdW,EAAOjB,GACzB,OAAOe,EAAQf,GACZ,GAAe,MAAXM,GAAgC,YAAdW,EAAOjB,GAChC,OAAOe,EAAQf,GAGvB,IAASA,EAAI,EAAGA,EAAIiB,EAAOhB,OAAQD,IAC/B,GAAkB,QAAdiB,EAAOjB,GACP,OAAOe,EAAQf,GAGvB,OAAOe,EAAQ,mCAGXpC,EAAQ2B,GACZ,IAAIa,EAAYzD,KAAKuB,mBAAmBN,GACxC,GAAkB,YAAdwC,EAAyB,CAGzB,IAFA,IAAIJ,EAAUrD,KAAKwB,YAAYP,GAC3BsC,EAAS,GACJjB,EAAI,EAAGA,EAAIe,EAAQd,OAAQD,IAAK,CACrC,IAAIkB,EAAaH,EAAQf,GACzBrB,EAAOuC,GAAcZ,EACrBW,EAAOD,KAAKtD,KAAKyB,QAAQR,EAAmB,MAAX2B,EAAiB,IAAM,MACxD3B,EAAOuC,GAAc,GAEzB,IAASlB,EAAI,EAAGA,EAAIiB,EAAOhB,OAAQD,IAAK,CACpC,GAAe,MAAXM,GAAgC,YAAdW,EAAOjB,GACzB,OAAOiB,EAAOjB,GACX,GAAe,MAAXM,GAAgC,YAAdW,EAAOjB,GAChC,OAAOiB,EAAOjB,GAGtB,IAASA,EAAI,EAAGA,EAAIiB,EAAOhB,OAAQD,IAC/B,GAAkB,QAAdiB,EAAOjB,GACP,OAAOiB,EAAOjB,GAGtB,OAAOiB,EAAO,GAEd,OAAOE,6CAKX,IAAIA,EAAYzD,KAAKuB,mBAAmBvB,KAAKI,MAAMa,QACnD,MAAkB,YAAdwC,EACO,cAAgBA,EAEhB,oCAKX,OACInD,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAACgD,MAAO,SAArB,cAA+CpD,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAACgD,MAAO,UAArB,iBAEnDpD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,cAEAF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACiD,WAAY,YACpBrD,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVT,KAAK4D,aAAa,EAAG5D,KAAKI,MAAMa,OAAO,IACvCjB,KAAK4D,aAAa,EAAG5D,KAAKI,MAAMa,OAAO,IACvCjB,KAAK4D,aAAa,EAAG5D,KAAKI,MAAMa,OAAO,KAE5CX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVT,KAAK4D,aAAa,EAAG5D,KAAKI,MAAMa,OAAO,IACvCjB,KAAK4D,aAAa,EAAG5D,KAAKI,MAAMa,OAAO,IACvCjB,KAAK4D,aAAa,EAAG5D,KAAKI,MAAMa,OAAO,KAE5CX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVT,KAAK4D,aAAa,EAAG5D,KAAKI,MAAMa,OAAO,IACvCjB,KAAK4D,aAAa,EAAG5D,KAAKI,MAAMa,OAAO,IACvCjB,KAAK4D,aAAa,EAAG5D,KAAKI,MAAMa,OAAO,OAIpDX,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQqD,KAAK,SAASpD,UAAU,mCACxBG,QAASZ,KAAK2B,aADtB,mBAMRrB,EAAAC,EAAAC,cAAA,UAAKR,KAAK6B,4BAzONf,IAAMC,WCgBX+C,mLAdP,OACIxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACuD,EAAD,OAEJzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,qBATDO,aCQCiD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.43b452a8.chunk.js","sourcesContent":["import React from 'react'\nimport './Game.css'\n\nclass Square extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: null,\n        };\n    }\n\n    render() {\n        return (\n            <button className=\"square\" style={this.props.squareStyle} onClick={this.props.onClicked}>\n                {this.props.value}\n            </button>\n        )\n    }\n}\n\nexport default Square","import React from 'react'\nimport './bootstrap.min.css'\nimport Square from './Square.js'\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            values: ['', '', '', '', '', '', '', '', ''],\n            nextX: true,\n            startX: true\n        }\n        this.handleClicked = this.handleClicked.bind(this)\n        this.calculateGameState = this.calculateGameState.bind(this)\n        this.findEmpties = this.findEmpties.bind(this)\n        this.minimax = this.minimax.bind(this)\n        this.searchMove = this.searchMove.bind(this)\n        this.restartGame = this.restartGame.bind(this)\n        this.randomlyChoose = this.randomlyChoose.bind(this)\n        this.displayGameState = this.displayGameState.bind(this)\n    }\n\n    renderSquare(index, value) {\n        const squareStyles = [\n            {\"border-left\": \"0px\", \"border-top\": \"0px\"},\n            {\"border-top\": \"0px\"},\n            {\"border-right\": \"0px\", \"border-top\": \"0px\"},\n            {\"border-left\": \"0px\"},\n            {},\n            {\"border-right\": \"0px\"},\n            {\"border-left\": \"0px\", \"border-bottom\": \"0px\"},\n            {\"border-bottom\": \"0px\"},\n            {\"border-right\": \"0px\", \"border-bottom\": \"0px\"},\n        ]\n        var squareStyle = {}\n        var keys = Object.keys(squareStyles[index])\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i]\n            squareStyle[key] = squareStyles[index][key]\n        }\n        if (value === 'X') {\n            value = '✖'\n            squareStyle['color'] = \"#545454\"\n        } else if (value === 'O') {\n            value = '◯'\n            squareStyle['color'] = \"#f2ebd3\"\n        }\n        return <Square value={value} squareStyle={squareStyle} onClicked={() => this.handleClicked(index)}/>\n    }\n\n    handleClicked(index) {\n        if (this.calculateGameState(this.state.values) === \"playing\" && this.state.values[index] === '') {\n            var values = this.state.values.slice()\n            if (this.state.nextX) {\n                values[index] = 'X'\n            } else {\n                values[index] = 'O'\n            }\n            var nextX = !this.state.nextX\n            this.setState({values: values, nextX: nextX})\n            var gameState = this.calculateGameState(values)\n            if (gameState === \"playing\") {\n                var values = values.slice()\n                var player = nextX ? 'X' : 'O'\n                var index = this.searchMove(values, player)\n                values[index] = player\n                this.setState({\n                        values: values, nextX: !nextX, startX: this.state.startX\n                    }\n                )\n            }\n        }\n    }\n\n    randomlyChoose() {\n        var values = ['', '', '', '', '', '', '', '', '']\n        values[Math.floor(Math.random() * this.state.values.length)] = 'O'\n        return values\n    }\n\n    restartGame() {\n        var gameState = this.calculateGameState(this.state.values)\n        if (gameState === \"playing\") {\n            this.setState({\n                    values: ['', '', '', '', '', '', '', '', ''],\n                    nextX: true,\n                    startX: this.state.startX\n                }\n            )\n        } else {\n            this.setState({\n                    values: !this.state.startX ? ['', '', '', '', '', '', '', '', ''] : this.randomlyChoose(),\n                    nextX: true,\n                    startX: !this.state.startX\n                }\n            )\n        }\n    }\n\n    calculateGameState(values) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (values[a] && values[a] === values[b] && values[a] === values[c]) {\n                if (values[a] === 'X') {\n                    return 'X wins!'\n                } else {\n                    return 'O wins!'\n                }\n            }\n        }\n        for (let i = 0; i < values.length; i++) {\n            if (values[i] === '') {\n                return \"playing\"\n            }\n        }\n        return \"tie\"\n    }\n\n    findEmpties(values) {\n        var empties = []\n        for (var i = 0; i < values.length; i++) {\n            if (values[i] === '') {\n                empties.push(i)\n            }\n        }\n        return empties\n    }\n\n    searchMove(values, player) {\n        var empties = this.findEmpties(values)\n        var result = []\n        for (var i = 0; i < empties.length; i++) {\n            var emptyIndex = empties[i]\n            values[emptyIndex] = player\n            result.push(this.minimax(values, player === 'X' ? 'O' : 'X'))\n            values[emptyIndex] = ''\n        }\n        for (var i = 0; i < result.length; i++) {\n            if (player === 'X' && result[i] === 'X wins!') {\n                return empties[i]\n            } else if (player === 'O' && result[i] === 'O wins!') {\n                return empties[i]\n            }\n        }\n        for (var i = 0; i < result.length; i++) {\n            if (result[i] === 'tie') {\n                return empties[i]\n            }\n        }\n        return empties[0]\n    }\n\n    minimax(values, player) {\n        var gameState = this.calculateGameState(values)\n        if (gameState === 'playing') {\n            var empties = this.findEmpties(values)\n            var result = []\n            for (var i = 0; i < empties.length; i++) {\n                var emptyIndex = empties[i]\n                values[emptyIndex] = player\n                result.push(this.minimax(values, player === 'X' ? 'O' : 'X'))\n                values[emptyIndex] = ''\n            }\n            for (var i = 0; i < result.length; i++) {\n                if (player === 'X' && result[i] === 'X wins!') {\n                    return result[i]\n                } else if (player === 'O' && result[i] === 'O wins!') {\n                    return result[i]\n                }\n            }\n            for (var i = 0; i < result.length; i++) {\n                if (result[i] === 'tie') {\n                    return result[i]\n                }\n            }\n            return result[0]\n        } else {\n            return gameState\n        }\n    }\n\n    displayGameState() {\n        var gameState = this.calculateGameState(this.state.values)\n        if (gameState !== \"playing\") {\n            return \"Game over: \" + gameState\n        } else {\n            return \"\"\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {/*<h3>Next player: {this.state.nextX ? 'X' : 'O'}</h3>*/}\n                <legend>\n                    <span style={{float: \"left\"}}>PLAYER (X)</span><span style={{float: \"right\"}}>COMPUTER (O)</span>\n                </legend>\n                <table className=\"table\">\n                    <thead>\n                    </thead>\n                    <tbody>\n                    <tr style={{background: \"#14bdac\"}}>\n                        <td>\n                            <div className=\"board-row\">\n                                {this.renderSquare(0, this.state.values[0])}\n                                {this.renderSquare(1, this.state.values[1])}\n                                {this.renderSquare(2, this.state.values[2])}\n                            </div>\n                            <div className=\"board-row\">\n                                {this.renderSquare(3, this.state.values[3])}\n                                {this.renderSquare(4, this.state.values[4])}\n                                {this.renderSquare(5, this.state.values[5])}\n                            </div>\n                            <div className=\"board-row\">\n                                {this.renderSquare(6, this.state.values[6])}\n                                {this.renderSquare(7, this.state.values[7])}\n                                {this.renderSquare(8, this.state.values[8])}\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <button type=\"button\" className=\"btn btn-primary btn-lg btn-block\"\n                                onClick={this.restartGame}>RESTART GAME\n                        </button>\n                    </tr>\n                    </tbody>\n                </table>\n                <h3>{this.displayGameState()}</h3>\n            </div>\n        )\n    }\n}\n\nexport default Board","import React, {Component} from 'react'\nimport Board from './Board.js'\nimport './Game.css'\n\nclass Game extends Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board/>\n                </div>\n                <div className=\"game-info\">\n                    <div>{/* status */}</div>\n                    <div>{/* to do */}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Game\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}